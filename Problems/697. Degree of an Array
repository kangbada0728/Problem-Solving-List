class Solution {
    public int findShortestSubArray(int[] nums) {
        
        int[] left = new int[50000];
        int[] right = new int[50000];
        int[] cnt = new int[50000];
        
        Arrays.fill(left, -1);
        Arrays.fill(right, -1);
        
        for(int i=0; i<nums.length; ++i) {
            int n = nums[i];
            cnt[n]+=1;
            if(left[n]==-1) {
                left[n] = i;
                right[n] = i;
            } else {
                right[n] = i;
            }
        }
        
        int maxCnt=1;
        int minLen=1;
        for(int n=0; n<50000; ++n) {
            if(maxCnt < cnt[n]) {
                maxCnt = cnt[n];
                minLen = right[n]-left[n]+1;
                
            } else if(maxCnt == cnt[n]) {
                minLen = minLen > (right[n]-left[n]+1) ? (right[n]-left[n]+1) : minLen;
            }
        }
        
        return minLen;
    }
}
