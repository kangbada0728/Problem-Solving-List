package practice;

import java.util.ArrayList;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class 추석트래픽 {
	
	class Solution {
	    public int solution(String[] lines) {
	        int answer = 1;
	        
	        Pattern p = Pattern.compile("^2016-09-15 (..):(..):(..)\\.(...) ([0-9\\.]+)s$");
	        Matcher m;
	        List<Integer> left = new ArrayList<Integer>();
	        List<Integer> right = new ArrayList<Integer>();
	        
	        for(String s : lines) {
	        	m = p.matcher(s);
	        	
	        	int hh = 0;
	        	int mm = 0;
	        	int ss = 0;
	        	int ms = 0;
	        	int gap = 0;
	        	if(m.find()) {
	        		hh = Integer.parseInt(m.group(1));
	        		mm = Integer.parseInt(m.group(2));
	        		ss = Integer.parseInt(m.group(3));
	        		ms = Integer.parseInt(m.group(4));
	        		gap = (int)(Double.parseDouble(m.group(5))*1000);
	        	}
	        	int b = hh*60*60*1000 + mm*60*1000 + ss*1000 + ms;
	        	int a = b-gap+1;
	        	left.add(a);
	        	right.add(b);
	        }
	        
	        for(int i=0; i<lines.length; ++i) {
	        	int r = left.get(i);
	        	int l = r-999;
	        	int cnt = 1;
	        	for(int j=0; j<lines.length; ++j) {
	        		if(i != j) {
	        			int start=left.get(j);
	        			int end=right.get(j);
	        			if(start<=l && l<=end) {
	        				cnt+=1;
	        			}else if(l<=start && end<=r) {
	        				cnt+=1;
	        			}else if(start<=r && r<=end) {
	        				cnt+=1;
	        			}else if(start<=l && r<=end) {
	        				cnt+=1;
	        			}
	        		}
	        	}
	        	answer = Math.max(answer, cnt);
	        	
	        	l = right.get(i);
	        	r = l+999;
	        	cnt = 1;
	        	for(int j=0; j<lines.length; ++j) {
	        		if(i != j) {
	        			int start = left.get(j);
	        			int end = right.get(j);
	        			if(start<=l && l<=end) {
	        				cnt+=1;
	        			}else if(l<=start && end<=r) {
	        				cnt+=1;
	        			}else if(start<=r && r<=end) {
	        				cnt+=1;
	        			}else if(start<=l && r<=end) {
	        				cnt+=1;
	        			}
	        		}
	        	}
	        	answer = Math.max(answer, cnt);
	        }
	        
	        return answer;
	    }
	}
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
