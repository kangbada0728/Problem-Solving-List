class Solution {
    public int openLock(String[] deadends, String target) {
        
        Set<String> set = new HashSet<>();
        for(String s : deadends) {
            set.add(s);
        }
        if(set.contains("0000")) {
            return -1;
        }
        
        Queue<String> q = new LinkedList<>();
        q.add("0000");
        set.add("0000");
        
        
        int cnt=0;
        while(!q.isEmpty()) {
            int N = q.size();
            
            while(N-->0) {
                String s = q.poll();
                
                if(s.equals(target)) {
                    return cnt;
                }
                
                for(int i=0; i<4; ++i) {
                    for(int j=-1; j<2; j+=2) {
                        int n = ((s.charAt(i) - '0') + j + 10) % 10;
                        String str = s.substring(0, i) + n + s.substring(i+1, s.length());
                        if(!set.contains(str)) {
                            q.add(str);
                            set.add(str);
                        }
                    }
                }
            }
            cnt+=1;
        }
        
        return -1;
    }
}
