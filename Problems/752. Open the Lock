import java.util.*;

class Solution {
    public int openLock(String[] deadends, String target) {
        
        Set<String> deadend = new HashSet<>();
        for(String s : deadends){
            deadend.add(s);
        }
        
        Queue<String> q = new LinkedList<>();
        q.add("0000");
        q.add(null);
        
        Set<String> seen = new HashSet<>();
        seen.add("0000");
        
        int cnt=0;
        while(!q.isEmpty()){
            
            String num = q.poll();
            
            if(num==null){
                cnt+=1;
                if(q.peek() != null){
                    q.add(null);
                }  
            }else if(num.equals(target)){
                return cnt;
            }else if(!deadend.contains(num)) {
                for(int i=0; i<4; ++i){
                    for(int j=-1; j<=1; j+=2){
                        int c = ((num.charAt(i)-'0') + j + 10) % 10;
                        String next = num.substring(0, i) + ("" + c) + num.substring(i+1);
                        if(!seen.contains(next)){
                            q.add(next);
                            seen.add(next);
                        }
                    }
                }
            }
        }
        
        return -1;
    }
}
