#include <iostream>
#include <algorithm>
#include <vector>
#include <tuple>
#include <stack>
#include <queue>
#include <set>
#include <map>
#include <string>
#include <cmath>
#include <cstring>

using namespace std;

int memo[21][21][21];

int dfs(int a, int b, int c){
    if(a<=0 || b<=0 || c<=0){
        return 1;
    }
    if(a>20 || b>20 || c>20){
        return dfs(20, 20, 20);
    }
    if(memo[a][b][c]>0){
        return memo[a][b][c];
    }
    if(a<b && b<c){
        memo[a][b][c] = dfs(a, b, c-1) + dfs(a, b-1, c-1) - dfs(a, b-1, c);
        return memo[a][b][c];
    }
    memo[a][b][c] = dfs(a-1, b, c) + dfs(a-1, b-1, c) + dfs(a-1, b, c-1) - dfs(a-1, b-1, c-1);
    return memo[a][b][c];
}




int main(void)
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
    
    freopen("sample_input.txt", "r", stdin);
    freopen("sample_output.txt", "w", stdout);
    freopen("sample_error.txt", "w", stderr);
    
    while(true){
        int a=0, b=0, c=0;
        cin>>a>>b>>c;
        if(a==-1 && b==-1 && c==-1){
            break;
        }
        int value = dfs(a, b, c);
        cout<<"w("<<a<<", "<<b<<", "<<c<<") = "<<value<<"\n";
    }
    
    return 0;
}
