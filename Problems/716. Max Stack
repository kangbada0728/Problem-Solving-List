class MaxStack {

    private Stack<Integer> stk1;
    private Stack<Integer> stk2;
    
    public MaxStack() {
        stk1 = new Stack<>();
        stk2 = new Stack<>();
    }
    
    public void push(int x) {
        stk1.add(x);
        if(stk2.isEmpty()) {
            stk2.add(x);
        } else {
            stk2.add(stk2.peek()>x ? stk2.peek() : x);
        }
    }
    
    public int pop() {
        stk2.pop();
        return stk1.pop();
    }
    
    public int top() {
        return stk1.peek();
    }
    
    public int peekMax() {
        return stk2.peek();
    }
    
    public int popMax() {
        Stack<Integer> tmp = new Stack<>();
        
        int max = peekMax();
        while(max!=stk1.peek()) {
            tmp.add(pop());
        }
        pop();
        while(!tmp.isEmpty()) {
            push(tmp.pop());
        }
        return max;
    }
}

/**
 * Your MaxStack object will be instantiated and called as such:
 * MaxStack obj = new MaxStack();
 * obj.push(x);
 * int param_2 = obj.pop();
 * int param_3 = obj.top();
 * int param_4 = obj.peekMax();
 * int param_5 = obj.popMax();
 */
