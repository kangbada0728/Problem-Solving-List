/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
        ListNode node;
        if(list1==null && list2==null){
            return null;
        }
        
        node = new ListNode();
        ListNode res = node;
        while(list1!=null && list2!=null) {
            
            int v1 = list1.val;
            int v2 = list2.val;
            
            if(v1<v2) {
                node.val = v1;
                list1 = list1.next;
                
            }else{
                node.val = v2;
                list2 = list2.next;
            }
            
            node.next = new ListNode();
            node = node.next;
        }
        
        while(list1!=null) {
            node.val = list1.val;
            list1=list1.next;
            if(list1!=null) {
                node.next = new ListNode();
                node = node.next;
            }
        }
        while(list2!=null) {
            node.val = list2.val;
            list2=list2.next;
            if(list2!=null) {
                node.next = new ListNode();
                node = node.next;
            }
        }
        
        return res;
    }
}
