/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    
    double target = 0;
    
    public int closestValue(TreeNode root, double target) {
        
        this.target = target;
        
        return getNum(root, Integer.MAX_VALUE);
    }
    
    private int getNum(TreeNode node, int prev) {
        if(node == null) {
            return prev;
        }
        
        if(node.val == target) {
            return node.val;
            
        } else if (node.val < target) {
            
            return getNum(node.right, Math.abs(prev-target) > Math.abs(node.val-target) ? node.val : prev);
            
        } else {
            return getNum(node.left, Math.abs(prev-target) > Math.abs(node.val-target) ? node.val : prev);
        }
    }
}
