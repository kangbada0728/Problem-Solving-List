/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    
    public TreeNode invertTree(TreeNode root) {
        if(root==null) {
            return null;
        }
        TreeNode res = new TreeNode();
        dfs(root, res);
        return res;
    }
    
    private void dfs(TreeNode n1, TreeNode n2) {
        if(n1==null){
            return;
        }
        
        n2.val = n1.val;
        if(n1.left!=null) {
            n2.right = new TreeNode();
            dfs(n1.left, n2.right);
        }
        if(n1.right!=null) {
            n2.left = new TreeNode();
            dfs(n1.right, n2.left);
        }        
    }
}
