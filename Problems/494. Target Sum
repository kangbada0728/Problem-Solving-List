class Solution {
    
    int total=0;
    int[][] memo;
    int[] nums;
    int target;
    
    public int findTargetSumWays(int[] nums, int target) {
        total = Arrays.stream(nums).sum();
        memo = new int[nums.length][2 * total + 1];
        this.nums = nums;
        this.target = target;
        
        for(int[] row : memo) {
            Arrays.fill(row, Integer.MIN_VALUE);
        }
        return cal(0, 0);
    }
    
    private int cal(int i, int sum) {
        if(i == nums.length) {
            if(sum==target){
                return 1;
            }
            return 0;
        } else if(memo[i][sum+total] != Integer.MIN_VALUE) {
            return memo[i][sum+total];
        }
        
        int add = cal(i+1, sum+nums[i]);
        int sub = cal(i+1, sum-nums[i]);
        memo[i][sum+total] = add+sub;
        return memo[i][sum+total];
    }
}
