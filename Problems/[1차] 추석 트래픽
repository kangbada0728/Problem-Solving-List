import java.util.*;

class Solution {
    public int solution(String[] lines) {
        int answer = 0;
        
        List<Integer> start = new ArrayList<>();
        List<Integer> end = new ArrayList<>();
        parsing(start, end, lines);
        
        return counting(start, end);
    }
    
    private int counting(List<Integer> start, List<Integer> end) {
        
        int max=0;
        
        int N = start.size();
        for(int i=0; i<N; ++i) {
            int cnt=0;
            int curR = end.get(i);
            for(int j=i; j<N; ++j) {
                int nextL = start.get(j);
                if(nextL < curR + 1000) {
                    cnt+=1;
                }
            }
            max = Math.max(max, cnt);
        }
        
        return max;
    }
    
    private void parsing(List<Integer> start, List<Integer> end, String[] lines) {
        
        for(String line : lines) {
            int h = Integer.parseInt(line.substring(11, 13)) * 60 * 60;
            int m = Integer.parseInt(line.substring(14, 16)) * 60;
            int s = Integer.parseInt(line.substring(17, 19));
            int ms = Integer.parseInt(line.substring(20, 23));
            
            int right = (h + m + s) * 1000 + ms;
            int gap = (int)Math.floor(Double.parseDouble(line.substring(24, line.length()-1)) * 1000);
            int left = right - gap + 1;
            
            start.add(left);
            end.add(right);
        }
    }
    
}
